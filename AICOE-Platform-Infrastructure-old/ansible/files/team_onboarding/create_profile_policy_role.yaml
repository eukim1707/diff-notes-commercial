---
## if you get "couldn't resolve module/action 'amazon.aws.s3_object'" error, then install 'ansible-galaxy collection install amazon.aws'
- name: Create S3 bucket
  amazon.aws.s3_bucket:
    name: "{{ bucket }}-{{ team_name }}"
    state: present
    public_access:
      block_public_acls: true
      ignore_public_acls: true
  vars:
    ansible_python_interpreter: /usr/bin/python3

- name: Create IAM role for team profile and attach team policy for S3
  community.aws.iam_role:
    name: "{{ cluster_name }}-{{ team_name }}-role"
    assume_role_policy_document: "{{ lookup('file','trust.json') }}"
    # managed_policies:
    #   - arn:aws:iam::{{ aws_account_id }}:policy/{{ cluster_name }}-{{ team_name }}-s3bucketaccess
  register: iam_role
  vars:
    ansible_python_interpreter: /usr/bin/python3

# This policy will make sure that the access is restricted to the kubeflow profile specific bucket and user cannot delete that bucket
- name: Create IAM policy for team profile
  community.aws.iam_policy:
    state: present
    iam_type: 'role'
    iam_name: "{{ cluster_name }}-{{ team_name }}-role"
    policy_name: "{{ cluster_name }}-{{ team_name }}-s3bucketaccess"
    policy_json: |
        {   
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Deny",
                    "NotAction": "s3:*",
                    "Resource": "*"
                },
                {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "NotResource": [
                        "arn:aws:s3:::{{ bucket }}-{{ team_name }}",
                        "arn:aws:s3:::{{ bucket }}-{{ team_name }}/*"
                    ]
                },
                {
                    "Action": [
                        "s3:*"
                    ],
                    "Effect": "Allow",
                    "Resource": [
                        "arn:aws:s3:::{{ bucket }}-{{ team_name }}",
                        "arn:aws:s3:::{{ bucket }}-{{ team_name }}/*"
                    ],
                    "Sid": "AllowAllS3ActionsInUserFolder"
                },
                {
                    "Action": [
                        "s3:DeleteBucket"
                    ],
                    "Effect": "Deny",
                    "Resource": "*",
                    "Sid": "DenyDeleteOfBucket"
                }
            ]
        }
  vars:
    ansible_python_interpreter: /usr/bin/python3

- debug:
    var: iam_role['arn']

- name: Set iam role arn
  set_fact:
    s3_role_profile_arn: "{{ iam_role['arn'] }}"